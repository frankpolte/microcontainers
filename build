#!/bin/bash
set -e

NAMESPACE=webuni
PACKAGE=""
NO_CLEAR=""
OPTS=""
for _ARG in "$@"; do
    case "$_ARG" in
        --force) OPTS="${OPTS} --no-cache";;
        --no-clear) NO_CLEAR="1";;
        *) if [ -z "$PACKAGE" ]; then PACKAGE="$_ARG"; else VERSION="$_ARG"; fi;;
    esac
    shift
done

_build() {
    local package="$1"
    local version="$2"
    local source_dir="${3:-${package}/${version}}"
    local target_dir="/tmp/${3:-${package}-${version}}"

    if [ ! -f "$source_dir/Dockerfile" ]; then
        printf "\033[30;41mUnable to find file \"%s/Dockerfile\"\033[0m\n" "$source_dir" >&2
        return
    fi

    froms="$(cat "$source_dir/Dockerfile" | grep "FROM $NAMESPACE" | awk '{print $2}')"
    for from in $froms; do
        from="${from#$NAMESPACE/}"
        _build "$(echo "$from" | cut -d: -f1)" "$(echo "$from" | cut -d: -f2)"
    done

    if [ ! -d "$target_dir" ] || [ "$NO_CLEAR" != "1" ]; then
        printf "\033[32mBuild %s/%s:%s - %s\033[0m\n" "$NAMESPACE" "$package" "$version" "$source_dir"
        rm -rf "$target_dir"
        cp -rfL "$source_dir" "$target_dir"
        docker build $OPTS -t "$NAMESPACE/$package:$version" "$target_dir" | sed "s/^/ |  /"
        if [ "$NO_CLEAR" != "1" ]; then rm -rf "$target_dir"; fi
        printf "\n"
    else
        printf "\033[32mImage %s/%s:%s exists\033[0m\n" "$NAMESPACE" "$package" "$version"
    fi
}

if test "${PACKAGE#*/}" != "$PACKAGE"; then
    VERSION="$(echo "$PACKAGE" | cut -d/ -f2)"
    PACKAGE="$(echo "$PACKAGE" | cut -d/ -f1)"
fi

DIRS=$(find ${PACKAGE}/* -maxdepth 0 \( -type d -o -type l \) | sort | cut -d/ -f2)

if [ -z "$VERSION" ]; then
    for VERSION in $DIRS; do
        _build "$PACKAGE" "$VERSION"
    done
else
    _build "$PACKAGE" "$VERSION"
fi

if [ $(echo "$DIRS" | wc -l) = 1 ] && [ "$VERSION" != "latest" ]; then
    _build "$PACKAGE" "latest" "$PACKAGE/$VERSION"
fi
